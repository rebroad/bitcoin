Outbound connections always drop one or two nodes after every block received - the slowest performing block deliverer.

Ensure 1 outbound connection is reserved for ThinProviders and 1 outbound connection reserved for CompactBlockProviders.

Allow user to specify how many "pity" connections (default to 3), and if there are no inbound connections, always reserve the 3 slowest deliverers as pity connections (i.e. when dropping an outbound connection, drop the 4th worst performer).

When requesting blocks upon new block announcement, request from the first two nodes that announced it.

Keep a regular track of our overall incoming bandwidth capability (average and slowest), and the typical number of "stall" clicks. If upon receiving a block, the speed drops too low then don't count this as a block server and therefore request the block from the next fastest node.

Support both Compact Blocks and XThin if possible. If a node appears to facilitate both (service bit for XThin and requests compact blocks) then randomly pick which to use (and if chosing Compact Blocks, then send the request for compact blocks, otherwise send a new message to request xthin blocks).

To calculate node's rating for block provision, use logarithmic decreasing number, such that it reaches < 0.5 at two minutes. Allocate this number for node's block advertisements and for their blocks (as two different numbers). Add to the previous number each time a block arrives and keep track of how many times this number has been added to so that the current rating is this number divided by the number of times. Create a record of times per block which gets deleted 2 minutes after the block was first seen.

Correlate checksums of incoming blocks with the block requested. If other nodes start sending a block with the same checksum we can debug which block this is likely to be and possibly kill the connection to save bandwidth.

If killing connections to save bandwidth, yet the node was considered a valuable node - create a mechanism by which we can immediately reconnect with the node.

Update GUI to show blocks received (and what type of blocks), and blocks accepted (and what type).

Get bitcoind compiling on Windows XP under cygwin.

No need to validate txs/blocks from Whitelisted peers

Measure how much CPU each node is causing our node to use - use this as a disconnection factor
